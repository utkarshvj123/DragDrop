{"ast":null,"code":"export const requiredData = array => {\n  array.forEach(object => {\n    if (object.name || object.count) {\n      object[\"label\"] = capitalizeFirstLetter(object.name);\n      object[\"value\"] = object.count;\n    }\n  });\n  return {\n    type: \"column2d\",\n    width: 800,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Stack Exchange\",\n        // subCaption: \"\",\n        xAxisName: \"Language\",\n        yAxisName: \"Counts\",\n        numberSuffix: \"K\",\n        theme: \"fusion\"\n      },\n      data: array\n    }\n  };\n};\n\nfunction capitalizeFirstLetter(string) {\n  var b = string.split(\"-\");\n  let newString;\n\n  if (b === -1) {\n    newString = string;\n  } else {\n    let c = b.join(\" \");\n    newString = c;\n  }\n\n  return newString.charAt(0).toUpperCase() + newString.slice(1);\n}","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/constants/globalFunction.js"],"names":["requiredData","array","forEach","object","name","count","capitalizeFirstLetter","type","width","height","dataFormat","dataSource","chart","caption","xAxisName","yAxisName","numberSuffix","theme","data","string","b","split","newString","c","join","charAt","toUpperCase","slice"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,KAAD,IAAW;AACrCA,EAAAA,KAAK,CAACC,OAAN,CAAeC,MAAD,IAAY;AACxB,QAAIA,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,KAA1B,EAAiC;AAC/BF,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBG,qBAAqB,CAACH,MAAM,CAACC,IAAR,CAAvC;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBA,MAAM,CAACE,KAAzB;AACD;AACF,GALD;AAMA,SAAO;AACLE,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE,GAHH;AAILC,IAAAA,UAAU,EAAE,MAJP;AAKLC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,gBADJ;AAEL;AACAC,QAAAA,SAAS,EAAE,UAHN;AAILC,QAAAA,SAAS,EAAE,QAJN;AAKLC,QAAAA,YAAY,EAAE,GALT;AAMLC,QAAAA,KAAK,EAAE;AANF,OADG;AASVC,MAAAA,IAAI,EAAEjB;AATI;AALP,GAAP;AAiBD,CAxBM;;AA0BP,SAASK,qBAAT,CAA+Ba,MAA/B,EAAuC;AACrC,MAAIC,CAAC,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAAR;AACA,MAAIC,SAAJ;;AACA,MAAIF,CAAC,KAAK,CAAC,CAAX,EAAc;AACZE,IAAAA,SAAS,GAAGH,MAAZ;AACD,GAFD,MAEO;AACL,QAAII,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAO,GAAP,CAAR;AACAF,IAAAA,SAAS,GAAGC,CAAZ;AACD;;AACD,SAAOD,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCJ,SAAS,CAACK,KAAV,CAAgB,CAAhB,CAA3C;AACD","sourcesContent":["export const requiredData = (array) => {\n  array.forEach((object) => {\n    if (object.name || object.count) {\n      object[\"label\"] = capitalizeFirstLetter(object.name);\n      object[\"value\"] = object.count;\n    }\n  });\n  return {\n    type: \"column2d\",\n    width: 800,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Stack Exchange\",\n        // subCaption: \"\",\n        xAxisName: \"Language\",\n        yAxisName: \"Counts\",\n        numberSuffix: \"K\",\n        theme: \"fusion\",\n      },\n      data: array,\n    },\n  };\n};\n\nfunction capitalizeFirstLetter(string) {\n  var b = string.split(\"-\");\n  let newString;\n  if (b === -1) {\n    newString = string;\n  } else {\n    let c = b.join(\" \");\n    newString = c;\n  }\n  return newString.charAt(0).toUpperCase() + newString.slice(1);\n}\n"]},"metadata":{},"sourceType":"module"}