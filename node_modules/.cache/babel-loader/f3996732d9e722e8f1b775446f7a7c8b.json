{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/components/SpinnerComponent/index.js\";\nimport React from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport styled, { css } from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst DarkBackground = styled.div`\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 999; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n\n  ${props => props.disappear && css`\n      display: block; /* show */\n    `}\n`;\n\nconst SpinnerComponent = () => {\n  const spinnerState = useSelector(state => {\n    var _state$isValidUser;\n\n    return state === null || state === void 0 ? void 0 : (_state$isValidUser = state.isValidUser) === null || _state$isValidUser === void 0 ? void 0 : _state$isValidUser.spinnerVisibility;\n  });\n  console.log(spinnerState, \".....spinnerStatespinnerState\");\n  return /*#__PURE__*/React.createElement(DarkBackground, {\n    disappear: spinnerState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingOverlay, {\n    active: spinnerState,\n    spinner: true,\n    text: \"Loading your content...\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    className: \"spinner-class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Some content or children or something.\")));\n};\n\nexport default SpinnerComponent;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/components/SpinnerComponent/index.js"],"names":["React","LoadingOverlay","styled","css","useDispatch","useSelector","DarkBackground","div","props","disappear","SpinnerComponent","spinnerState","state","isValidUser","spinnerVisibility","console","log","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKC,KAAD,IACAA,KAAK,CAACC,SAAN,IACAN,GAAI;AACR;AACA,KAAM;AACN,CAjBA;;AAmBA,MAAMO,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,YAAY,GAAGN,WAAW,CAC7BO,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,6CAAWA,KAAK,CAAEC,WAAlB,uDAAW,mBAAoBC,iBAA/B;AAAA,GAD8B,CAAhC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAA0B,+BAA1B;AACA,sBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEA,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEA,YADV;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,IAAI,EAAC,yBAHP;AAIE,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAJT;AAKE,IAAA,SAAS,EAAC,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAPF,CADF,CADF;AAaD,CAlBD;;AAmBA,eAAeR,gBAAf","sourcesContent":["import React from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport styled, { css } from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst DarkBackground = styled.div`\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 999; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n\n  ${(props) =>\n    props.disappear &&\n    css`\n      display: block; /* show */\n    `}\n`;\n\nconst SpinnerComponent = () => {\n  const spinnerState = useSelector(\n    (state) => state?.isValidUser?.spinnerVisibility\n  );\n  console.log(spinnerState, \".....spinnerStatespinnerState\");\n  return (\n    <DarkBackground disappear={spinnerState}>\n      <LoadingOverlay\n        active={spinnerState}\n        spinner\n        text=\"Loading your content...\"\n        style={{ width: \"100%\", height: \"100%\" }}\n        className=\"spinner-class\"\n      >\n        <p>Some content or children or something.</p>\n      </LoadingOverlay>\n    </DarkBackground>\n  );\n};\nexport default SpinnerComponent;\n"]},"metadata":{},"sourceType":"module"}