{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISOWeek;\n\nvar _index = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../getUTCISOWeek/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\n\nfunction setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index2.default)(dirtyDate);\n  var isoWeek = (0, _index.default)(dirtyISOWeek);\n  var diff = (0, _index3.default)(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/node_modules/date-fns/_lib/setUTCISOWeek/index.js"],"names":["Object","defineProperty","exports","value","default","setUTCISOWeek","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","dirtyDate","dirtyISOWeek","arguments","length","TypeError","date","isoWeek","diff","setUTCDate","getUTCDate","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD,C,CAE/F;AACA;;;AACA,SAASN,aAAT,CAAuBQ,SAAvB,EAAkCC,YAAlC,EAAgD;AAC9C,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CAAc,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UAArE,CAAN;AACD;;AAED,MAAIE,IAAI,GAAG,CAAC,GAAGT,OAAO,CAACL,OAAZ,EAAqBS,SAArB,CAAX;AACA,MAAIM,OAAO,GAAG,CAAC,GAAGb,MAAM,CAACF,OAAX,EAAoBU,YAApB,CAAd;AACA,MAAIM,IAAI,GAAG,CAAC,GAAGV,OAAO,CAACN,OAAZ,EAAqBc,IAArB,IAA6BC,OAAxC;AACAD,EAAAA,IAAI,CAACG,UAAL,CAAgBH,IAAI,CAACI,UAAL,KAAoBF,IAAI,GAAG,CAA3C;AACA,SAAOF,IAAP;AACD;;AAEDK,MAAM,CAACrB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISOWeek;\n\nvar _index = _interopRequireDefault(require(\"../toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../getUTCISOWeek/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = (0, _index2.default)(dirtyDate);\n  var isoWeek = (0, _index.default)(dirtyISOWeek);\n  var diff = (0, _index3.default)(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}