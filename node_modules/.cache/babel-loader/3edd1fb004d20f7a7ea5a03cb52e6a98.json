{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/modules/Home/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData, getListOfUsers, getTaskLists } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\nimport { requiredDateTimeFormat } from \"../../constants/globalFunction\";\nimport ModalWrapper from \"../../components/ModalWrapper\";\nconst Container = styled.div`\n  margin-top: 100px;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState(new Date());\n  const [modalVisble, setModalVisibility] = useState(false);\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = date => {\n    setCalenderValue(date);\n    console.log(requiredDateTimeFormat(date, false), \"...dateConversion.....\");\n  };\n\n  const modalEventHandler = () => {\n    setModalVisibility(!modalVisble);\n  };\n\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  console.log(calenderValue, \".......calenderValue\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: modalEventHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Create Task\"), modalVisble && /*#__PURE__*/React.createElement(ModalWrapper, {\n    modalEventHandler: modalEventHandler,\n    modalVisble: modalVisble,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Select Due date\")))))); // }\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/index.js"],"names":["React","useEffect","useState","styled","bindActionCreators","geStackExchanegeData","getListOfUsers","getTaskLists","NavBar","authenticateUserAction","useDispatch","useSelector","ToastContainer","toast","DragDrop","DateTime","requiredDateTimeFormat","ModalWrapper","Container","div","TopWrapper","Home","dispatch","listUser","setListUser","calenderValue","setCalenderValue","Date","modalVisble","setModalVisibility","onChangeDateTime","date","console","log","modalEventHandler","toastMessage","toastType","message","dismiss","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData, getListOfUsers, getTaskLists } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\nimport { requiredDateTimeFormat } from \"../../constants/globalFunction\";\nimport ModalWrapper from \"../../components/ModalWrapper\";\n\nconst Container = styled.div`\n  margin-top: 100px;\n`;\n\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState(new Date());\n  const [modalVisble, setModalVisibility] = useState(false);\n\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = (date) => {\n    setCalenderValue(date);\n    console.log(requiredDateTimeFormat(date, false), \"...dateConversion.....\");\n  };\n\n  const modalEventHandler = () => {\n    setModalVisibility(!modalVisble);\n  };\n\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  console.log(calenderValue, \".......calenderValue\");\n  return (\n    <React.Fragment>\n      <Container>\n        {/* <DragDrop /> */}\n        <button onClick={modalEventHandler}>Create Task</button>\n        {modalVisble && (\n          <ModalWrapper\n            modalEventHandler={modalEventHandler}\n            modalVisble={modalVisble}\n          >\n            <div>\n              <div className=\"form-group\">\n                <label>Select Due date</label>\n              </div>\n            </div>\n          </ModalWrapper>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n  // }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}