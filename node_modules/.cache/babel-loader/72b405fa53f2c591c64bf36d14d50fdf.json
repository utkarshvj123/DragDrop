{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/modules/Home/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData, getListOfUsers, getTaskLists } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\nconst Container = styled.div`\n  margin-top: 100px;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState(new Date());\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = date => {\n    console.log(date, \".......setCalenderValue\");\n    setCalenderValue(date);\n    console.log(dateConversion(date), \"...dateConversion.....\", qwerty);\n  };\n\n  const dateConversion = date => {\n    const newFormat = {\n      mm: date.getMonth() + 1,\n      dd: date.getDate(),\n      yy: date.getFullYear().toString().slice(-2),\n      yyyy: date.getFullYear()\n    };\n    const newFormat2 = `${newFormat.yyyy}-${newFormat.mm > 9 ? newFormat.mm : \"0\" + newFormat.mm}-${newFormat.dd > 9 ? newFormat.dd : \"0\" + newFormat.dd}`;\n    const qwerty = new Date(date).toLocaleTimeString(\"en-US\", {\n      hour12: false,\n      hour: \"numeric\",\n      minute: \"numeric\"\n    });\n    return newFormat2 + qwerty;\n  };\n\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  console.log(calenderValue, \".......calenderValue\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DateTime, {\n    value: calenderValue,\n    onChange: onChangeDateTime,\n    showTime: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }))); // }\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/index.js"],"names":["React","useEffect","useState","styled","bindActionCreators","geStackExchanegeData","getListOfUsers","getTaskLists","NavBar","authenticateUserAction","useDispatch","useSelector","ToastContainer","toast","DragDrop","DateTime","Container","div","TopWrapper","Home","dispatch","listUser","setListUser","calenderValue","setCalenderValue","Date","onChangeDateTime","date","console","log","dateConversion","qwerty","newFormat","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","newFormat2","toLocaleTimeString","hour12","hour","minute","toastMessage","toastType","message","dismiss","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData, getListOfUsers, getTaskLists } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\n\nconst Container = styled.div`\n  margin-top: 100px;\n`;\n\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState(new Date());\n\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = (date) => {\n    console.log(date, \".......setCalenderValue\");\n    setCalenderValue(date);\n    console.log(dateConversion(date), \"...dateConversion.....\", qwerty);\n  };\n\n  const dateConversion = (date) => {\n    const newFormat = {\n      mm: date.getMonth() + 1,\n      dd: date.getDate(),\n      yy: date.getFullYear().toString().slice(-2),\n      yyyy: date.getFullYear(),\n    };\n    const newFormat2 = `${newFormat.yyyy}-${\n      newFormat.mm > 9 ? newFormat.mm : \"0\" + newFormat.mm\n    }-${newFormat.dd > 9 ? newFormat.dd : \"0\" + newFormat.dd}`;\n    const qwerty = new Date(date).toLocaleTimeString(\"en-US\", {\n      hour12: false,\n      hour: \"numeric\",\n      minute: \"numeric\",\n    });\n\n    return newFormat2 + qwerty;\n  };\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  console.log(calenderValue, \".......calenderValue\");\n  return (\n    <React.Fragment>\n      <Container>\n        {/* <DragDrop /> */}\n        <DateTime\n          value={calenderValue}\n          onChange={onChangeDateTime}\n          showTime={true}\n        />\n      </Container>\n    </React.Fragment>\n  );\n  // }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}