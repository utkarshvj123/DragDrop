{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/modules/Home/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.scss\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData, getListOfUsers, getTaskLists, createTask } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\nimport { requiredDateTimeFormat } from \"../../constants/globalFunction\";\nimport ModalWrapper from \"../../components/ModalWrapper\";\nimport Select from \"../../components/Select\";\nconst Container = styled.div`\n  margin-top: 100px;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState();\n  const [requiredDateFormat, setRequiredDateFormat] = useState();\n  const [modalVisble, setModalVisibility] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [currentSelectedPriority, setCurrentSelectedPriority] = useState({});\n  const [assignedPerson, setAssignedPerson] = useState({});\n  const currentListOfUsers = useSelector(state => {\n    var _state$homeData;\n\n    return state === null || state === void 0 ? void 0 : (_state$homeData = state.homeData) === null || _state$homeData === void 0 ? void 0 : _state$homeData.listOfAllUsers;\n  });\n  console.log(currentListOfUsers, \".....currentState\");\n  let prioritySet = [{\n    id: 1,\n    name: \"Low\",\n    value: \"low\"\n  }, {\n    id: 2,\n    name: \"Medium\",\n    value: \"medium\"\n  }, {\n    id: 3,\n    name: \"High\",\n    value: \"high\"\n  }];\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = date => {\n    const geetingValidDate = requiredDateTimeFormat(date, false);\n    setCalenderValue(geetingValidDate);\n    console.log(geetingValidDate, \"...dateConversion.....\");\n  };\n\n  const modalEventHandler = type => {\n    if (type === \"enable\") return setModalVisibility(!modalVisble);else {\n      const jsonCreation = {\n        message,\n        due_date: calenderValue,\n        priority: currentSelectedPriority.id,\n        assigned_to: assignedPerson.id\n      };\n      debugger;\n\n      if (calenderValue && Object.keys(currentSelectedPriority).length > 0 && Object.keys(assignedPerson).length > 0 && message) {\n        dispatch(createTask(jsonCreation)).then(response => {\n          debugger;\n        });\n      } else {\n        toastMessage(\"error\", \"Please fill all detail\");\n      }\n    }\n  };\n\n  const onChangeMessage = event => {\n    console.log(event.target.value);\n    setMessage(event.target.value);\n  };\n\n  const hadleOnChangePriority = (selectedOption, type) => {\n    console.log(type, \".....ty[pe\");\n    if (type === \"priority\") return setCurrentSelectedPriority(selectedOption);else return setAssignedPerson(selectedOption);\n  };\n\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  };\n\n  console.log(calenderValue, \".......calenderValue\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => modalEventHandler(\"enable\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Create Task\"), modalVisble && /*#__PURE__*/React.createElement(ModalWrapper, {\n    modalEventHandler: () => modalEventHandler(\"enable\"),\n    modalVisble: modalVisble,\n    outerClick: false,\n    onSubmit: () => modalEventHandler(\"submit\"),\n    heading: \"Create task\",\n    btnName: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Select Due-date :\"), /*#__PURE__*/React.createElement(DateTime, {\n    className: \"form-control\",\n    value: calenderValue,\n    onChange: onChangeDateTime,\n    showTime: true,\n    placeHolder: \"Please select Date and Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Message :\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    onChange: onChangeMessage,\n    value: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Priority :\"), /*#__PURE__*/React.createElement(Select, {\n    currentSelected: currentSelectedPriority,\n    handleOnChange: event => hadleOnChangePriority(event, \"priority\"),\n    options: prioritySet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Assigned :\"), /*#__PURE__*/React.createElement(Select, {\n    currentSelected: assignedPerson,\n    handleOnChange: event => hadleOnChangePriority(event, \"assigned\"),\n    options: currentListOfUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })))))); // }\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/index.js"],"names":["React","useEffect","useState","styled","bindActionCreators","geStackExchanegeData","getListOfUsers","getTaskLists","createTask","NavBar","authenticateUserAction","useDispatch","useSelector","ToastContainer","toast","DragDrop","DateTime","requiredDateTimeFormat","ModalWrapper","Select","Container","div","TopWrapper","Home","dispatch","listUser","setListUser","calenderValue","setCalenderValue","requiredDateFormat","setRequiredDateFormat","modalVisble","setModalVisibility","message","setMessage","currentSelectedPriority","setCurrentSelectedPriority","assignedPerson","setAssignedPerson","currentListOfUsers","state","homeData","listOfAllUsers","console","log","prioritySet","id","name","value","onChangeDateTime","date","geetingValidDate","modalEventHandler","type","jsonCreation","due_date","priority","assigned_to","Object","keys","length","then","response","toastMessage","onChangeMessage","event","target","hadleOnChangePriority","selectedOption","toastType","dismiss","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.scss\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  geStackExchanegeData,\n  getListOfUsers,\n  getTaskLists,\n  createTask,\n} from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DragDrop from \"./DragDrop/index\";\nimport DateTime from \"../../components/DateTime\";\nimport { requiredDateTimeFormat } from \"../../constants/globalFunction\";\nimport ModalWrapper from \"../../components/ModalWrapper\";\nimport Select from \"../../components/Select\";\n\nconst Container = styled.div`\n  margin-top: 100px;\n`;\n\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [listUser, setListUser] = useState({});\n  const [calenderValue, setCalenderValue] = useState();\n  const [requiredDateFormat, setRequiredDateFormat] = useState();\n  const [modalVisble, setModalVisibility] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [currentSelectedPriority, setCurrentSelectedPriority] = useState({});\n  const [assignedPerson, setAssignedPerson] = useState({});\n\n  const currentListOfUsers = useSelector(\n    (state) => state?.homeData?.listOfAllUsers\n  );\n  console.log(currentListOfUsers, \".....currentState\");\n  let prioritySet = [\n    { id: 1, name: \"Low\", value: \"low\" },\n    { id: 2, name: \"Medium\", value: \"medium\" },\n    { id: 3, name: \"High\", value: \"high\" },\n  ];\n\n  useEffect(() => {\n    dispatch(getListOfUsers());\n    dispatch(getTaskLists());\n  }, []);\n\n  const onChangeDateTime = (date) => {\n    const geetingValidDate = requiredDateTimeFormat(date, false);\n    setCalenderValue(geetingValidDate);\n    console.log(geetingValidDate, \"...dateConversion.....\");\n  };\n\n  const modalEventHandler = (type) => {\n    if (type === \"enable\") return setModalVisibility(!modalVisble);\n    else {\n      const jsonCreation = {\n        message,\n        due_date: calenderValue,\n        priority: currentSelectedPriority.id,\n        assigned_to: assignedPerson.id,\n      };\n      debugger;\n      if (\n        calenderValue &&\n        Object.keys(currentSelectedPriority).length > 0 &&\n        Object.keys(assignedPerson).length > 0 &&\n        message\n      ) {\n        dispatch(createTask(jsonCreation)).then((response) => {\n          debugger;\n        });\n      } else {\n        toastMessage(\"error\", \"Please fill all detail\");\n      }\n    }\n  };\n\n  const onChangeMessage = (event) => {\n    console.log(event.target.value);\n    setMessage(event.target.value);\n  };\n\n  const hadleOnChangePriority = (selectedOption, type) => {\n    console.log(type, \".....ty[pe\");\n    if (type === \"priority\") return setCurrentSelectedPriority(selectedOption);\n    else return setAssignedPerson(selectedOption);\n  };\n\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  console.log(calenderValue, \".......calenderValue\");\n  return (\n    <React.Fragment>\n      <Container>\n        {/* <DragDrop /> */}\n\n        <button onClick={() => modalEventHandler(\"enable\")}>Create Task</button>\n        {modalVisble && (\n          <ModalWrapper\n            modalEventHandler={() => modalEventHandler(\"enable\")}\n            modalVisble={modalVisble}\n            outerClick={false}\n            onSubmit={() => modalEventHandler(\"submit\")}\n            heading={\"Create task\"}\n            btnName=\"Save\"\n          >\n            <div>\n              <div className=\"form-group\">\n                <label>Select Due-date :</label>\n                <DateTime\n                  className=\"form-control\"\n                  value={calenderValue}\n                  onChange={onChangeDateTime}\n                  showTime={true}\n                  placeHolder=\"Please select Date and Time\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Message :</label>\n                <input\n                  className=\"form-control\"\n                  onChange={onChangeMessage}\n                  value={message}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Priority :</label>\n                <Select\n                  currentSelected={currentSelectedPriority}\n                  handleOnChange={(event) =>\n                    hadleOnChangePriority(event, \"priority\")\n                  }\n                  options={prioritySet}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Assigned :</label>\n                <Select\n                  currentSelected={assignedPerson}\n                  handleOnChange={(event) =>\n                    hadleOnChangePriority(event, \"assigned\")\n                  }\n                  options={currentListOfUsers}\n                />\n              </div>\n            </div>\n          </ModalWrapper>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n  // }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}