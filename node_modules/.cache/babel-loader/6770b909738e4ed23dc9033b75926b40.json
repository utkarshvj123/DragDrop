{"ast":null,"code":"import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\nimport { requiredDateTimeFormat } from \"../../../constants/globalFunction\";\nimport { SPINNER } from \"../../Login/actions\";\nexport const GET_LIST_USERS = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\nexport const GET_LIST_TASKS = \"GET_LIST_TASKS\";\nexport const TASK_CREATED = \"TASK_CREATED\";\nconst URL = \"https://devza.com/tests/tasks\";\nconst API_KEY = \"e5PhLmwULk9R4nlIMqTzbXnLt5QqiXUN\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  authtoken: API_KEY\n};\nexport const getListOfUsers = () => async dispatch => {\n  try {\n    var _response$data;\n\n    const newUrl = `${URL}/listusers`;\n    const response = await axios.get(newUrl, {\n      headers\n    });\n\n    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.status) === \"success\") {\n      var _response$data2;\n\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.users\n      });\n    }\n\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\nexport const getTaskLists = () => async dispatch => {\n  try {\n    var _response$data3;\n\n    const newUrl = `${URL}/list`;\n    const response = await axios.get(newUrl, {\n      headers\n    });\n\n    if ((response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.status) === \"success\") {\n      var _response$data4;\n\n      // dispatch({ type: SPINNER, payload: false });\n      dispatch({\n        type: GET_LIST_TASKS,\n        payload: response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.tasks\n      });\n    }\n\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\nexport const createTask = jsonForTask => async dispatch => {\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask.due_date, false);\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n\n  try {\n    const newUrl = `${URL}/create`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\nexport const updateTask = jsonForTask => async dispatch => {\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask.due_date, false);\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n  bodyFormData.append(\"taskid\", jsonForTask.id);\n\n  try {\n    const newUrl = `${URL}/update`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\nexport const taskRemoved = taskId => async dispatch => {\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"taskid\", taskId);\n\n  try {\n    const newUrl = `${URL}/delete`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n}; //-----Modal popup-------//\n\nexport function modalPopUp(value) {\n  return dispatch => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value\n    });\n  };\n} // export const geStackExchanegeData = (\n//   newStartDate,\n//   newEndDate,\n//   pageSize,\n//   pageNumber\n// ) => async (dispatch) => {\n//   try {\n//     const newUrl = `${URL}/listusers`;\n//     const response = await axios.get(newUrl);\n//     if (response?.status === 200) {\n//       dispatch({\n//         type: GET_DATA,\n//         payload: requiredData(response?.data?.items),\n//       });\n//     }\n//     return response;\n//   } catch (ex) {\n//     return ex;\n//   }\n// };","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/actions/index.js"],"names":["axios","requiredData","requiredDateTimeFormat","SPINNER","GET_LIST_USERS","MODAL_POP_UP","GET_LIST_TASKS","TASK_CREATED","URL","API_KEY","headers","authtoken","getListOfUsers","dispatch","newUrl","response","get","data","status","type","payload","users","ex","getTaskLists","tasks","createTask","jsonForTask","geetingValidDate","due_date","bodyFormData","FormData","append","message","priority","assigned_to","post","updateTask","id","taskRemoved","taskId","modalPopUp","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\nimport { requiredDateTimeFormat } from \"../../../constants/globalFunction\";\nimport { SPINNER } from \"../../Login/actions\";\n\nexport const GET_LIST_USERS = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\nexport const GET_LIST_TASKS = \"GET_LIST_TASKS\";\nexport const TASK_CREATED = \"TASK_CREATED\";\n\nconst URL = \"https://devza.com/tests/tasks\";\nconst API_KEY = \"e5PhLmwULk9R4nlIMqTzbXnLt5QqiXUN\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  authtoken: API_KEY,\n};\n\nexport const getListOfUsers = () => async (dispatch) => {\n  try {\n    const newUrl = `${URL}/listusers`;\n    const response = await axios.get(newUrl, { headers });\n    if (response?.data?.status === \"success\") {\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response?.data?.users,\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const getTaskLists = () => async (dispatch) => {\n  try {\n    const newUrl = `${URL}/list`;\n    const response = await axios.get(newUrl, { headers });\n    if (response?.data?.status === \"success\") {\n      // dispatch({ type: SPINNER, payload: false });\n      dispatch({\n        type: GET_LIST_TASKS,\n        payload: response?.data?.tasks,\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const createTask = (jsonForTask) => async (dispatch) => {\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask.due_date, false);\n\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n\n  try {\n    const newUrl = `${URL}/create`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const updateTask = (jsonForTask) => async (dispatch) => {\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask.due_date, false);\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n  bodyFormData.append(\"taskid\", jsonForTask.id);\n  try {\n    const newUrl = `${URL}/update`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const taskRemoved = (taskId) => async (dispatch) => {\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"taskid\", taskId);\n\n  try {\n    const newUrl = `${URL}/delete`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\n//-----Modal popup-------//\nexport function modalPopUp(value) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value,\n    });\n  };\n}\n\n// export const geStackExchanegeData = (\n//   newStartDate,\n//   newEndDate,\n//   pageSize,\n//   pageNumber\n// ) => async (dispatch) => {\n//   try {\n//     const newUrl = `${URL}/listusers`;\n//     const response = await axios.get(newUrl);\n//     if (response?.status === 200) {\n//       dispatch({\n//         type: GET_DATA,\n//         payload: requiredData(response?.data?.items),\n//       });\n//     }\n//     return response;\n//   } catch (ex) {\n//     return ex;\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}