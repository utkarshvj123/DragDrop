{"ast":null,"code":"import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\nexport const GET_LIST_USERS = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\nconst URL = \"https://devza.com/tests/tasks\";\nconst API_KEY = \"e5PhLmwULk9R4nlIMqTzbXnLt5QqiXUN\";\nexport const getListOfUsers = () => async dispatch => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    AuthToken: API_KEY\n  };\n\n  try {\n    const newUrl = `${URL}/listusers`;\n    const response = await axios.get(newUrl, {\n      headers\n    });\n\n    if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n      debugger;\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response.data\n      });\n    }\n\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n}; //-----Modal popup-------//\n\nexport function modalPopUp(value) {\n  return dispatch => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value\n    });\n  };\n} // export const geStackExchanegeData = (\n//   newStartDate,\n//   newEndDate,\n//   pageSize,\n//   pageNumber\n// ) => async (dispatch) => {\n//   try {\n//     const newUrl = `${URL}/listusers`;\n//     const response = await axios.get(newUrl);\n//     if (response?.status === 200) {\n//       dispatch({\n//         type: GET_DATA,\n//         payload: requiredData(response?.data?.items),\n//       });\n//     }\n//     return response;\n//   } catch (ex) {\n//     return ex;\n//   }\n// };","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/actions/index.js"],"names":["axios","requiredData","GET_LIST_USERS","MODAL_POP_UP","URL","API_KEY","getListOfUsers","dispatch","headers","AuthToken","newUrl","response","get","status","type","payload","data","ex","modalPopUp","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sCAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG,UAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,MAAMC,GAAG,GAAG,+BAAZ;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,OAAO,GAAG;AACd,oBAAgB,kBADF;AAEdC,IAAAA,SAAS,EAAEJ;AAFG,GAAhB;;AAIA,MAAI;AACF,UAAMK,MAAM,GAAI,GAAEN,GAAI,YAAtB;AACA,UAAMO,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUF,MAAV,EAAkB;AAAEF,MAAAA;AAAF,KAAlB,CAAvB;;AACA,QAAI,CAAAG,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,MAAV,MAAqB,GAAzB,EAA8B;AAC5B;AACAN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEZ,cADC;AAEPa,QAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFX,OAAD,CAAR;AAID;;AACD,WAAOL,QAAP;AACD,GAXD,CAWE,OAAOM,EAAP,EAAW;AACX,WAAOA,EAAP;AACD;AACF,CAnBM,C,CAqBP;;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAQZ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEX,YADC;AAEPY,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\n\nexport const GET_LIST_USERS = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\n\nconst URL = \"https://devza.com/tests/tasks\";\nconst API_KEY = \"e5PhLmwULk9R4nlIMqTzbXnLt5QqiXUN\";\n\nexport const getListOfUsers = () => async (dispatch) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    AuthToken: API_KEY,\n  };\n  try {\n    const newUrl = `${URL}/listusers`;\n    const response = await axios.get(newUrl, { headers });\n    if (response?.status === 200) {\n      debugger;\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response.data,\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\n//-----Modal popup-------//\nexport function modalPopUp(value) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value,\n    });\n  };\n}\n\n// export const geStackExchanegeData = (\n//   newStartDate,\n//   newEndDate,\n//   pageSize,\n//   pageNumber\n// ) => async (dispatch) => {\n//   try {\n//     const newUrl = `${URL}/listusers`;\n//     const response = await axios.get(newUrl);\n//     if (response?.status === 200) {\n//       dispatch({\n//         type: GET_DATA,\n//         payload: requiredData(response?.data?.items),\n//       });\n//     }\n//     return response;\n//   } catch (ex) {\n//     return ex;\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}