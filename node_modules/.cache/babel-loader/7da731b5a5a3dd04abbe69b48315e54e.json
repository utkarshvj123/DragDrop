{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/modules/Login/index.js\";\nimport React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport styled from \"styled-components\";\nimport { ToastContainer, toast } from \"react-toastify\";\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toastVisible = message => {\n      toast.dismiss();\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 1500,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    };\n\n    this.state = {\n      fields: {\n        email: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      email: \"required|email\",\n      password: \"required\"\n    });\n\n    this.form.onformsubmit = fields => {\n      if (localStorage.getItem(\"email\") === null && localStorage.getItem(\"password\") === null) return this.toastVisible(\"not registered please registered first\");else if (localStorage.getItem(\"email\") !== fields.email) return this.toastVisible(\"email not matched\");else if (localStorage.getItem(\"password\") !== fields.password) return this.toastVisible(\"password not matched\");else {\n        this.props.authenticateUserAction(true);\n        this.props.history.push(\"/home\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.form.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"custom-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: \"mt-2 form-control\",\n      onBlur: this.form.handleBlurEvent,\n      onChange: this.form.handleChangeEvent,\n      value: this.state.fields.email,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, this.state.errors.email ? this.state.errors.email : \"\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"custom-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"mt-2 form-control\",\n      onBlur: this.form.handleBlurEvent,\n      onChange: this.form.handleChangeEvent,\n      value: this.state.fields.password,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, this.state.errors.password ? this.state.errors.password : \"\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  isValidUser\n}) => {\n  return {\n    isValidUser\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({\n      authenticateUserAction\n    }, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Login/index.js"],"names":["React","ReactFormInputValidation","withRouter","bindActionCreators","connect","authenticateUserAction","styled","ToastContainer","toast","StyledLabel","label","Login","Component","constructor","props","toastVisible","message","dismiss","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","state","fields","email","password","errors","form","useRules","onformsubmit","localStorage","getItem","history","push","render","handleSubmit","handleBlurEvent","handleChangeEvent","mapStateToProps","isValidUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport styled from \"styled-components\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: \"\",\n        password: \"\",\n      },\n      errors: {},\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      email: \"required|email\",\n      password: \"required\",\n    });\n    this.form.onformsubmit = (fields) => {\n      if (\n        localStorage.getItem(\"email\") === null &&\n        localStorage.getItem(\"password\") === null\n      )\n        return this.toastVisible(\"not registered please registered first\");\n      else if (localStorage.getItem(\"email\") !== fields.email)\n        return this.toastVisible(\"email not matched\");\n      else if (localStorage.getItem(\"password\") !== fields.password)\n        return this.toastVisible(\"password not matched\");\n      else {\n        this.props.authenticateUserAction(true);\n        this.props.history.push(\"/home\");\n      }\n    };\n  }\n\n  toastVisible = (message) => {\n    toast.dismiss();\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.form.handleSubmit}>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.email ? this.state.errors.email : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.password ? this.state.errors.password : \"\"}\n            </label>\n          </p>\n\n          <p>\n            <button type=\"submit\" className=\"btn btn-secondary\">\n              Submit\n            </button>\n          </p>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ isValidUser }) => {\n  return { isValidUser };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ authenticateUserAction }, dispatch),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n"]},"metadata":{},"sourceType":"module"}