{"ast":null,"code":"var _jsxFileName = \"/Users/embibe/Downloads/Devza/src/modules/Home/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"; // fake data generator\n\nconst getItems = (count, offset = 0) => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `item-${k + offset}`,\n  content: `item ${k + offset}`\n})); // a little function to help us with reordering the result\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\n * Moves an item from one list to another list.\n */\n\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: getItems(20),\n      selected: getItems(5, 20),\n      otherSelected: getItems(1, 6, 30)\n    };\n    this.id2List = {\n      droppable: \"items\",\n      droppable2: \"selected\",\n      droppable3: \"otherSelected\"\n    };\n\n    this.getList = id => this.state[this.id2List[id]];\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result; // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        const items = reorder(this.getList(source.droppableId), source.index, destination.index);\n        let state = {\n          items\n        };\n\n        if (source.droppableId === \"droppable2\") {\n          state = {\n            selected: items\n          };\n        } else if (source.droppableId === \"droppable3\") {\n          state = {\n            otherSelected: items\n          };\n        }\n\n        this.setState(state);\n      } else {\n        const result = move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        this.setState({\n          items: result.droppable,\n          selected: result.droppable2,\n          droppable3: result.droppable3\n        });\n      }\n    };\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), item.content))), provided.placeholder)), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, this.state.selected.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }), item.content))), provided.placeholder)), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"droppable3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, this.state.otherSelected.map((item, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }), item.content))), provided.placeholder))));\n  }\n\n}\n\nexport default Home; // import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import \"./style.css\";\n// import { bindActionCreators } from \"redux\";\n// import { geStackExchanegeData } from \"./actions\";\n// import NavBar from \"../../components/NavBar\";\n// import { authenticateUserAction } from \"../Login/actions\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// const Container = styled.div`\n//   margin-top: 100px;\n// `;\n// const TopWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   padding: 0% 10%;\n//   @media (max-width: 840px) {\n//     padding: 0% 5%;\n//   }\n//   @media (max-width: 720px) {\n//     display: block;\n//   }\n// `;\n// const Home = () => {\n//   const dispatch = useDispatch();\n//   const toastMessage = (toastType, message) => {\n//     toast.dismiss();\n//     toast[toastType](message, {\n//       position: \"top-right\",\n//       autoClose: 1800,\n//       hideProgressBar: true,\n//       closeOnClick: true,\n//       pauseOnHover: true,\n//       draggable: true,\n//       progress: undefined,\n//     });\n//   };\n//   return (\n//     <React.Fragment>\n//       <div>hello</div>\n//     </React.Fragment>\n//   );\n//   // }\n// };\n// export default Home;","map":{"version":3,"sources":["/Users/embibe/Downloads/Devza/src/modules/Home/index.js"],"names":["React","Component","ReactDOM","DragDropContext","Droppable","Draggable","getItems","count","offset","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","Home","state","items","selected","otherSelected","id2List","droppable","droppable2","droppable3","getList","onDragEnd","setState","render","provided","snapshot","innerRef","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\n    id: `item-${k + offset}`,\n    content: `item ${k + offset}`,\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n});\n\nclass Home extends Component {\n  state = {\n    items: getItems(20),\n    selected: getItems(5, 20),\n    otherSelected: getItems(1, 6, 30),\n  };\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  id2List = {\n    droppable: \"items\",\n    droppable2: \"selected\",\n    droppable3: \"otherSelected\",\n  };\n\n  getList = (id) => this.state[this.id2List[id]];\n\n  onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { items };\n\n      if (source.droppableId === \"droppable2\") {\n        state = { selected: items };\n      } else if (source.droppableId === \"droppable3\") {\n        state = { otherSelected: items };\n      }\n\n      this.setState(state);\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        items: result.droppable,\n        selected: result.droppable2,\n        droppable3: result.droppable3,\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <div className=\"d-flex\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.items.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <Droppable droppableId=\"droppable2\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.selected.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          <Droppable droppableId=\"droppable3\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}\n              >\n                {this.state.otherSelected.map((item, index) => (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}\n                      >\n                        {item.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\nexport default Home;\n\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import \"./style.css\";\n// import { bindActionCreators } from \"redux\";\n// import { geStackExchanegeData } from \"./actions\";\n// import NavBar from \"../../components/NavBar\";\n// import { authenticateUserAction } from \"../Login/actions\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { ToastContainer, toast } from \"react-toastify\";\n\n// const Container = styled.div`\n//   margin-top: 100px;\n// `;\n\n// const TopWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   padding: 0% 10%;\n//   @media (max-width: 840px) {\n//     padding: 0% 5%;\n//   }\n//   @media (max-width: 720px) {\n//     display: block;\n//   }\n// `;\n\n// const Home = () => {\n//   const dispatch = useDispatch();\n\n//   const toastMessage = (toastType, message) => {\n//     toast.dismiss();\n//     toast[toastType](message, {\n//       position: \"top-right\",\n//       autoClose: 1800,\n//       hideProgressBar: true,\n//       closeOnClick: true,\n//       pauseOnHover: true,\n//       draggable: true,\n//       progress: undefined,\n//     });\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <div>hello</div>\n//     </React.Fragment>\n//   );\n//   // }\n// };\n\n// export default Home;\n"]},"metadata":{},"sourceType":"module"}