{"version":3,"sources":["components/Select/index.js","constants/globalFunction.js","modules/Login/actions/index.js","modules/Home/actions/index.js","components/DragDrop/index.js","components/DateTime/index.js","components/ModalWrapper/index.js","modules/Home/Components/CreateTaskModal/index.js","modules/Home/index.js","components/NavBar/index.js","router/AuthRoute.js","modules/Login/index.js","modules/SignUp/index.js","components/Card/index.js","modules/LandingPage/index.js","components/SpinnerComponent/index.js","App.js","serviceWorker.js","redux/homeReducer.js","redux/loginReducer.js","redux/index.js","index.js"],"names":["Select","arr","index","newItem","currentSelected","handleOnChange","options","isDisabled","dataNewvalue","result","name","id","length","slice","className","value","undefined","onChange","event","findedvalue","find","film","target","placeholder","disabled","map","res","key","requiredDateTimeFormat","date","timeStatus","newFormat","mm","getMonth","dd","getDate","yy","getFullYear","toString","yyyy","qwerty","Date","toLocaleTimeString","hour12","hour","minute","second","handlingDrapAndDropUntillApiResponse","array1","array2","olderArray","low","priorityLow","medium","priorityMedium","high","priorityHigh","dueDatedArray","clonedData","creatingRequiredDataFormat","array","searchValue","_users","search","trim","toLowerCase","filter","user","assigned_name","match","array3","completeArray","obj","newDate","due_date","push","priority","mappingDataWithUserDetail","smallerArray","biggerArray","sortedName","requiredData","obj2","assigned_to","newObj","objectCreationAfterSort","objectValue","sortName","cloneDataObj","newerObj","sortData","allData","sort","a","b","data1","data2","compareObjects","object1","object2","obj1","toUpperCase","authenticateUserAction","response","localStorage","setItem","dispatch","type","payload","spinerStateUpdate","show","URL","headers","authtoken","getTaskLists","userList","newUrl","axios","get","data","status","tasks","sortDataAccourdingToUserSpecific","updateTask","jsonForTask","geetingValidDate","bodyFormData","FormData","append","message","post","reorder","list","startIndex","endIndex","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","findedNotAvailableName","findedNotAvailable","actionFunction","priorityTypeKey","droppableId","sourceClone","destClone","DragDrop","state","items","props","listOfAllTasks","selected","otherSelected","completeData","id2List","setOfAllData","getList","onDragEnd","setState","setofCurrentSelected","findingNotAvaiable","f","includes","handleDragDrop","newSetData","this","valueData","indexValue","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","item","draggableId","isDragging","draggableStyle","draggableProps","dragHandleProps","userSelect","grid","margin","onClick","handlingRemoval","color","size","handlingEdit","toLocaleDateString","src","picture","filteredData","Component","DateTime","showTime","placeHolder","showTimeSelect","timeClassName","time","getHours","placeholderText","ModalWrapper","modalVisble","modalEventHandler","children","outerClick","onSubmit","heading","btnName","classNameBody","Modal","onHide","backdrop","Header","closeButton","Title","Body","Footer","Button","variant","defaultProps","CreateTaskModal","completeJsonForDisplay","onChangeDateTime","onChangeMessage","hadleOnChangePriority","currentListOfUsers","title","prioritySet","prioritySetFind","detailCustomerName","Container","styled","div","ButtonWrapper","SearchSortWrapper","Home","useDispatch","useState","setModalVisibility","setCompleteJsonForDisplay","editModalVisible","setEditModalVisible","searchValueDefined","setSearchValue","sortSelect","setSortSelect","useSelector","homeData","listOfAllUsers","sortBy","sortCategory","useEffect","users","then","Object","keys","jsonCreation","toastMessage","toastType","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","selectedOption","currentData","category","isDisabledSordSearch","Fragment","searched","removalValue","taskId","json","dataValue","NavBar","logout","buttonName","buttonClass","AuthRoute","isValidUser","exact","path","component","to","StyledLabel","label","Login","toastVisible","dismiss","error","fields","email","password","errors","form","ReactFormInputValidation","useRules","onformsubmit","getItem","history","handleSubmit","onBlur","handleBlurEvent","handleChangeEvent","autoComplete","React","withRouter","connect","bindActionCreators","SignUp","confirmPassword","console","log","Card","handleClick","signup","login","role","href","LandingPage","onClickHandle","signUp","DarkBackground","disappear","css","SpinnerComponent","spinnerState","spinnerVisibility","active","spinner","text","height","App","getCurrentStatus","render","Boolean","window","location","hostname","initialState","modalPopUp","JSON","parse","rootReducer","combineReducers","action","store","createStore","reducer","compose","applyMiddleware","thunk","ReduxPromise","__REDUX_DEVTOOLS_EXTENSION__","trace","traceLimit","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5924eb2a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Select = ({ currentSelected, handleOnChange, options, isDisabled }) => {\n  const gettingChangedvalue = (event) => {\n    const findedvalue = options.find((film) => film.id === event.target.value);\n    handleOnChange(findedvalue);\n  };\n\n  const insert = (arr, index, newItem) => [\n    // part of the array before the specified index\n    ...arr.slice(0, index),\n    // inserted item\n    newItem,\n    // part of the array after the specified index\n    ...arr.slice(index),\n  ];\n  let dataNewvalue = [...options];\n  const result = insert(dataNewvalue, 0, {\n    name: \"Select\",\n    id: options.length + 2,\n  });\n  return (\n    <select\n      className=\"form-control\"\n      value={\n        currentSelected?.id !== undefined ? currentSelected?.id : result[0]?.id\n      }\n      onChange={gettingChangedvalue}\n      placeholder=\"select\"\n      disabled={isDisabled}\n    >\n      {result.map((res) => (\n        <option\n          key={res.id}\n          value={res.id}\n          disabled={res?.name === \"Select\" ? true : false}\n        >\n          {res?.name}\n        </option>\n      ))}\n    </select>\n  );\n};\nexport default Select;\n","export const requiredDateTimeFormat = (date, timeStatus) => {\n  const newFormat = {\n    mm: date.getMonth() + 1,\n    dd: date.getDate(),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear(),\n  };\n  const qwerty = new Date(date).toLocaleTimeString(\"en-US\", {\n    hour12: false,\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  });\n  const newFormat2 = `${newFormat.yyyy}-${\n    newFormat.mm > 9 ? newFormat.mm : \"0\" + newFormat.mm\n  }-${newFormat.dd > 9 ? newFormat.dd : \"0\" + newFormat.dd} ${qwerty}`;\n  return newFormat2;\n};\n\nexport const handlingDrapAndDropUntillApiResponse = (\n  array1,\n  array2,\n  olderArray\n) => {\n  return {\n    low: array1?.result?.priorityLow,\n    medium: array1?.result?.priorityMedium,\n    high: array1?.result?.priorityHigh,\n    dueDatedArray: array2,\n    clonedData: olderArray,\n  };\n};\n\nexport const creatingRequiredDataFormat = (array, searchValue, olderArray) => {\n  let _users = array;\n  let search = searchValue.trim().toLowerCase();\n  if (search.length > 0) {\n    _users = _users.filter(function (user) {\n      return user.assigned_name.toLowerCase().match(search);\n    });\n  }\n\n  let array1 = [];\n  let array2 = [];\n  let array3 = [];\n  let completeArray = [];\n\n  _users.filter((obj) => {\n    const newDate = new Date(obj.due_date);\n    obj = { ...obj, due_date: newDate };\n    completeArray.push(obj);\n    if (obj.priority === \"1\") {\n      array1.push(obj);\n    } else if (obj.priority === \"2\") {\n      array2.push(obj);\n    } else if (obj.priority === \"3\") {\n      array3.push(obj);\n    }\n  });\n\n  return {\n    low: array1,\n    medium: array2,\n    high: array3,\n    dueDatedArray: completeArray,\n    clonedData: olderArray,\n  };\n};\n\nexport const mappingDataWithUserDetail = (\n  smallerArray,\n  biggerArray,\n  sortedName\n) => {\n  let array1 = [];\n  let array2 = [];\n  let array3 = [];\n  let completeArray = [];\n  let requiredData = {};\n  smallerArray.filter((obj) => {\n    biggerArray.filter((obj2) => {\n      if (obj2.assigned_to === obj.id) {\n        let newObj = {\n          ...obj2,\n          ...obj,\n          id: obj2.id,\n          due_date: new Date(obj2.due_date),\n        };\n        completeArray.push(newObj);\n        if (obj2.priority === \"1\") {\n          array1.push(newObj);\n        } else if (obj2.priority === \"2\") {\n          array2.push(newObj);\n        } else if (obj2.priority === \"3\") {\n          array3.push(newObj);\n        }\n      }\n    });\n  });\n  if (sortedName === \"\") {\n    requiredData = {\n      low: array1,\n      medium: array2,\n      high: array3,\n      dueDatedArray: completeArray,\n      clonedData: completeArray,\n    };\n  } else {\n    const data = {\n      low: array1,\n      medium: array2,\n      high: array3,\n      dueDatedArray: completeArray,\n      clonedData: completeArray,\n    };\n    requiredData = objectCreationAfterSort(data, sortedName);\n    // {\n    //   low: objectCreationAfterSort(array1, sortedName),\n    //   medium: objectCreationAfterSort(array2, sortedName),\n    //   high: objectCreationAfterSort(array3),\n    //   dueDatedArray: objectCreationAfterSort(completeArray, sortedName),\n    //   clonedData: objectCreationAfterSort(completeArray, sortedName),\n    // };\n  }\n  return requiredData;\n};\n\nexport const objectCreationAfterSort = (objectValue, sortName) => {\n  const cloneDataObj = { ...objectValue };\n  let newerObj = {};\n  if (cloneDataObj.length === undefined) {\n    newerObj = {\n      low: sortData(cloneDataObj.low, sortName),\n      medium: sortData(cloneDataObj.medium, sortName),\n      high: sortData(cloneDataObj.high, sortName),\n      dueDatedArray: sortData(cloneDataObj.dueDatedArray, sortName),\n      clonedData: sortData(cloneDataObj.clonedData, sortName),\n    };\n  } else if (cloneDataObj.length > 0) {\n    newerObj = sortData(cloneDataObj.low, sortName);\n  }\n  return newerObj;\n};\n\nexport const sortData = (allData, sortName) => {\n  if (sortName === \"due_date\") {\n    return allData.sort(function (a, b) {\n      return a[sortName] - b[sortName];\n    });\n  } else {\n    return allData.sort((data1, data2) => {\n      return compareObjects(data1, data2, sortName);\n    });\n  }\n};\n\nconst compareObjects = (object1, object2, key) => {\n  const obj1 = object1[key].toUpperCase();\n  const obj2 = object2[key].toUpperCase();\n\n  if (obj1 < obj2) {\n    return -1;\n  }\n  if (obj1 > obj2) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const requiredData = (array) => {\n  array.forEach((object) => {\n    if (object.name || object.count) {\n      object[\"label\"] = capitalizeFirstLetter(object.name);\n      object[\"value\"] = object.count;\n    }\n  });\n  return {\n    type: \"column2d\",\n    width: 800,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Stack Exchange\",\n        // subCaption: \"\",\n        xAxisName: \"Language\",\n        yAxisName: \"Counts\",\n        numberSuffix: \"K\",\n        theme: \"fusion\",\n      },\n      data: array,\n    },\n  };\n};\n\nfunction capitalizeFirstLetter(string) {\n  var b = string.split(\"-\");\n  let newString;\n  if (b === -1) {\n    newString = string;\n  } else {\n    let c = b.join(\" \");\n    newString = c;\n  }\n  return newString.charAt(0).toUpperCase() + newString.slice(1);\n}\n","export const IS_VALID_USER = \"IS_VALID_USER\";\nexport const SPINNER = \"SPINNER\";\n\nexport function authenticateUserAction(response) {\n  localStorage.setItem(\"isValid\", response);\n  return (dispatch) => {\n    dispatch({\n      type: IS_VALID_USER,\n      payload: response,\n    });\n  };\n}\n\nexport function spinerStateUpdate(show) {\n  return (dispatch) => {\n    dispatch({\n      type: SPINNER,\n      payload: show,\n    });\n  };\n}\n","import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\nimport {\n  requiredDateTimeFormat,\n  creatingRequiredDataFormat,\n  mappingDataWithUserDetail,\n  handlingDrapAndDropUntillApiResponse,\n  objectCreationAfterSort,\n} from \"../../../constants/globalFunction\";\nimport { SPINNER } from \"../../Login/actions\";\n\nexport const GET_LIST_USERS = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\nexport const GET_LIST_TASKS = \"GET_LIST_TASKS\";\nexport const TASK_CREATED = \"TASK_CREATED\";\nexport const SORT_CATEGORY = \"SORT_CATEGORY\";\n\nconst URL = \"https://devza.com/tests/tasks\";\nconst API_KEY = \"e5PhLmwULk9R4nlIMqTzbXnLt5QqiXUN\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  authtoken: API_KEY,\n};\n\nexport const getListOfUsers = () => async (dispatch) => {\n  try {\n    const newUrl = `${URL}/listusers`;\n    const response = await axios.get(newUrl, { headers });\n    if (response?.data?.status === \"success\") {\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response?.data?.users,\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const settingSortCategory = (currentData, category) => async (\n  dispatch\n) => {\n  dispatch({\n    type: SORT_CATEGORY,\n    payload: category,\n  });\n  dispatch(sortDataAccourdingToUserSpecific(currentData, category));\n};\n\nexport const getTaskLists = (userList, sortedName) => async (dispatch) => {\n  try {\n    const newUrl = `${URL}/list`;\n    const response = await axios.get(newUrl, { headers });\n    if (response?.data?.status === \"success\") {\n      dispatch({\n        type: GET_LIST_TASKS,\n        payload: mappingDataWithUserDetail(\n          userList,\n          response?.data?.tasks,\n          sortedName\n        ),\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const searchingName = (array, searched) => async (dispatch) => {\n  dispatch({\n    type: GET_LIST_TASKS,\n    payload: creatingRequiredDataFormat(array, searched, array),\n  });\n};\n\nexport const sortDataAccourdingToUserSpecific = (array, sortedName) => async (\n  dispatch\n) => {\n  dispatch({\n    type: GET_LIST_TASKS,\n    payload: objectCreationAfterSort(array, sortedName),\n  });\n};\n\nexport const createTask = (jsonForTask) => async (dispatch) => {\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask.due_date, false);\n\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n\n  try {\n    const newUrl = `${URL}/create`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const updateTask = (jsonForTask, dueDatedArray, olderArray) => async (\n  dispatch\n) => {\n  if (dueDatedArray?.length > 0 && olderArray?.length > 0) {\n    dispatch({\n      type: GET_LIST_TASKS,\n      payload: handlingDrapAndDropUntillApiResponse(\n        jsonForTask,\n        dueDatedArray,\n        olderArray\n      ),\n    });\n  }\n  const geetingValidDate = requiredDateTimeFormat(jsonForTask?.due_date, false);\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"message\", jsonForTask.message);\n  bodyFormData.append(\"due_date\", geetingValidDate);\n  bodyFormData.append(\"priority\", jsonForTask.priority);\n  bodyFormData.append(\"assigned_to\", jsonForTask.assigned_to);\n  bodyFormData.append(\"taskid\", jsonForTask.id);\n  try {\n    const newUrl = `${URL}/update`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\nexport const taskRemoved = (taskId) => async (dispatch) => {\n  var bodyFormData = new FormData();\n  bodyFormData.append(\"taskid\", taskId);\n\n  try {\n    const newUrl = `${URL}/delete`;\n    const response = await axios.post(newUrl, bodyFormData, {\n      headers,\n    });\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\n//-----Modal popup-------//\nexport function modalPopUp(value) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value,\n    });\n  };\n}\n\n// export const geStackExchanegeData = (\n//   newStartDate,\n//   newEndDate,\n//   pageSize,\n//   pageNumber\n// ) => async (dispatch) => {\n//   try {\n//     const newUrl = `${URL}/listusers`;\n//     const response = await axios.get(newUrl);\n//     if (response?.status === 200) {\n//       dispatch({\n//         type: GET_DATA,\n//         payload: requiredData(response?.data?.items),\n//       });\n//     }\n//     return response;\n//   } catch (ex) {\n//     return ex;\n//   }\n// };\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport * as Icon from \"react-bootstrap-icons\";\n\n// fake data generator\nconst getItems = (count, offset = 0) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\n    id: `item-${k + offset}`,\n    content: `item ${k + offset}`,\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  source,\n  destination,\n  droppableSource,\n  droppableDestination,\n  findedNotAvailableName,\n  findedNotAvailable,\n  actionFunction\n) => {\n  let priorityTypeKey = \"\";\n  if (droppableDestination.droppableId === \"priorityLow\") {\n    priorityTypeKey = \"1\";\n  } else if (droppableDestination.droppableId === \"priorityMedium\") {\n    priorityTypeKey = \"2\";\n  } else if (droppableDestination.droppableId === \"priorityHigh\") {\n    priorityTypeKey = \"3\";\n  }\n  const sourceClone = Array.from(source);\n\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, {\n    ...removed,\n    priority: priorityTypeKey,\n  });\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  result[findedNotAvailableName] = findedNotAvailable;\n  actionFunction({\n    ...removed,\n    priority: priorityTypeKey,\n    due_date: new Date(removed.due_date),\n    result,\n  });\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver) => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250,\n});\n\nclass DragDrop extends Component {\n  state = {\n    items: this.props.listOfAllTasks.low,\n    selected: this.props.listOfAllTasks.medium,\n    otherSelected: this.props.listOfAllTasks.high,\n    completeData: this.props.listOfAllTasks.dueDatedArray,\n  };\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.listOfAllTasks.dueDatedArray.length >= 0 &&\n      props.listOfAllTasks.low.length >= 0 &&\n      props.listOfAllTasks.medium.length >= 0 &&\n      props.listOfAllTasks.high.length >= 0\n      // props.listOfAllTasks.length !== state.completeData.length\n    ) {\n      const filteredData = props.listOfAllTasks;\n      return {\n        completeData: filteredData.dueDatedArray,\n        items: filteredData.low,\n        selected: filteredData.medium,\n        otherSelected: filteredData.high,\n      };\n    } else return { ...state };\n  }\n\n  /**\n   * A semi-generic way to handle multiple lists. Matches\n   * the IDs of the droppable container to the names of the\n   * source arrays stored in the state.\n   */\n  id2List = {\n    priorityLow: \"items\",\n    priorityMedium: \"selected\",\n    priorityHigh: \"otherSelected\",\n  };\n\n  setOfAllData = [\"priorityLow\", \"priorityMedium\", \"priorityHigh\"];\n  getList = (id) => this.state[this.id2List[id]];\n\n  onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { items };\n\n      if (source.droppableId === \"priorityMedium\") {\n        state = { selected: items };\n      } else if (source.droppableId === \"priorityHigh\") {\n        state = { otherSelected: items };\n      }\n\n      this.setState(state);\n    } else {\n      let setofCurrentSelected = [];\n      setofCurrentSelected.push(source.droppableId);\n      setofCurrentSelected.push(destination.droppableId);\n      let findingNotAvaiable = this.setOfAllData.filter(\n        (f) => !setofCurrentSelected.includes(f)\n      );\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination,\n        findingNotAvaiable[0],\n        this.state[this.id2List[findingNotAvaiable[0]]],\n        this.props.handleDragDrop\n      );\n\n      this.setState({\n        items: result.priorityLow,\n        selected: result.priorityMedium,\n        otherSelected: result.priorityHigh,\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    let newSetData = [\n      this.state.items,\n      this.state.selected,\n      this.state.otherSelected,\n    ];\n    return (\n      <>\n        {this.props.listOfAllTasks.dueDatedArray.length > 0 ? (\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            {newSetData.map((valueData, indexValue) => (\n              <Droppable\n                key={indexValue}\n                droppableId={\n                  indexValue === 0\n                    ? \"priorityLow\"\n                    : indexValue === 1\n                    ? \"priorityMedium\"\n                    : \"priorityHigh\"\n                }\n              >\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                    className=\"draggable-inner-container\"\n                  >\n                    <div className=\"heading\">\n                      {indexValue === 0\n                        ? \"Low Priority\"\n                        : indexValue === 1\n                        ? \"Medium priority\"\n                        : \"High Priority\"}{\" \"}\n                    </div>\n                    {valueData.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id}\n                        index={index}\n                        className=\"inner-drop-down\"\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                            className=\"draggable-component\"\n                          >\n                            <div\n                              className=\"cross-button\"\n                              onClick={() => this.props.handlingRemoval(item)}\n                            >\n                              <Icon.ArchiveFill color=\"red\" size={18} />\n                            </div>\n                            <div\n                              className=\"detail-element\"\n                              onClick={() => this.props.handlingEdit(item)}\n                            >\n                              {item.message}\n                            </div>\n                            <div className=\"bottom-wrapper\">\n                              <div className=\"priority-wrapper\">\n                                <Icon.ArrowUp\n                                  color={\n                                    item.priority === \"1\"\n                                      ? \"green\"\n                                      : item.priority === \"2\"\n                                      ? \"yellow\"\n                                      : \"red\"\n                                  }\n                                  size={20}\n                                />\n                                <div className=\"text-styling\">\n                                  {item?.due_date?.toLocaleDateString()}\n                                </div>\n                              </div>\n                              <div className=\"img-name-wrapper\">\n                                <div className=\"circular-name\">\n                                  <img\n                                    src={item.picture}\n                                    className=\"text-name\"\n                                  />\n                                </div>\n                                <div className=\"text-styling\">\n                                  {item?.assigned_name}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            ))}\n          </DragDropContext>\n        ) : (\n          <div>No data found</div>\n        )}\n      </>\n    );\n  }\n}\nexport default DragDrop;\n\n// <Droppable droppableId=\"priorityMedium\">\n// {(provided, snapshot) => (\n//   <div\n//     ref={provided.innerRef}\n//     style={getListStyle(snapshot.isDraggingOver)}\n//   >\n//     <div className=\"heading\">Medium Priority</div>\n\n//     {this.state.selected.map((item, index) => (\n//       <Draggable\n//         key={item.id}\n//         draggableId={item.id}\n//         index={index}\n//       >\n//         {(provided, snapshot) => (\n//           <div\n//             className=\"draggable-component\"\n//             ref={provided.innerRef}\n//             {...provided.draggableProps}\n//             {...provided.dragHandleProps}\n//             style={getItemStyle(\n//               snapshot.isDragging,\n//               provided.draggableProps.style\n//             )}\n//           >\n//             <div\n//               className=\"cross-button\"\n//               onClick={() => this.props.handlingRemoval(item)}\n//             >\n//               <Icon.ArchiveFill color=\"red\" size={20} />\n//             </div>\n//             <div\n//               className=\"detail-element\"\n//               onClick={() => this.props.handlingEdit(item)}\n//             >\n//               {item.message}\n//             </div>{\" \"}\n//             <div className=\"bottom-wrapper\">\n//               <div className=\"priority-wrapper\">\n//                 <Icon.ArrowUp color=\"orange\" size={20} />\n//                 <div className=\"text-styling\">\n//                   {item?.due_date?.toLocaleDateString()}\n//                 </div>{\" \"}\n//               </div>\n//               <div className=\"img-name-wrapper\">\n//                 <div className=\"circular-name\">\n//                   {/* <span className=\"text-name\">\n//                     {item.assigned_name}\n//                   </span> */}\n//                   <img src={item.picture} className=\"text-name\" />\n//                 </div>\n//                 <div className=\"text-styling\">\n//                   {item?.assigned_name}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </Draggable>\n//     ))}\n//     {provided.placeholder}\n//   </div>\n// )}\n// </Droppable>\n\n// <Droppable droppableId=\"priorityHigh\">\n// {(provided, snapshot) => (\n//   <div\n//     ref={provided.innerRef}\n//     style={getListStyle(snapshot.isDraggingOver)}\n//   >\n//     <div className=\"heading\">High Priority</div>\n//     {this.state.otherSelected.map((item, index) => (\n//       <Draggable\n//         key={item.id}\n//         draggableId={item.id}\n//         index={index}\n//       >\n//         {(provided, snapshot) => (\n//           <div\n//             className=\"draggable-component\"\n//             ref={provided.innerRef}\n//             {...provided.draggableProps}\n//             {...provided.dragHandleProps}\n//             style={getItemStyle(\n//               snapshot.isDragging,\n//               provided.draggableProps.style\n//             )}\n//           >\n//             <div\n//               className=\"cross-button\"\n//               onClick={() => this.props.handlingRemoval(item)}\n//             >\n//               <Icon.ArchiveFill color=\"red\" size={20} />\n//             </div>\n\n//             <div\n//               className=\"detail-element\"\n//               onClick={() => this.props.handlingEdit(item)}\n//             >\n//               {item.message}\n//             </div>\n//             {/* <div\n//               className=\"cross-button\"\n//               onClick={() => this.props.handlingEdit(item)}\n//             >\n//               <Icon.PencilSquare color=\"black\" size={20} />\n//             </div> */}\n//             <div className=\"bottom-wrapper\">\n//               <div className=\"priority-wrapper\">\n//                 <Icon.ArrowUp color=\"red\" size={20} />\n//                 <div className=\"text-styling\">\n//                   {item?.due_date?.toLocaleDateString()}\n//                 </div>\n//               </div>\n//               <div className=\"img-name-wrapper\">\n//                 <div className=\"circular-name\">\n//                   {/* <span className=\"text-name\">\n//                     {item.assigned_name}\n//                   </span> */}\n//                   <img src={item.picture} className=\"text-name\" />\n//                 </div>\n//                 <div className=\"text-styling\">\n//                   {item?.assigned_name}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </Draggable>\n//     ))}\n//     {provided.placeholder}\n//   </div>\n// )}\n// </Droppable>\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst DateTime = ({ onChange, value, showTime, placeHolder }) => {\n  let handleColor = (time) => {\n    return time.getHours() > 12 ? \"text-success\" : \"text-error\";\n  };\n  return (\n    <DatePicker\n      showTimeSelect={showTime}\n      selected={value}\n      onChange={(date) => onChange(date)}\n      timeClassName={handleColor}\n      placeholderText={placeHolder}\n    />\n  );\n};\n\nexport default DateTime;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction ModalWrapper({\n  modalVisble,\n  modalEventHandler,\n  children,\n  outerClick,\n  onSubmit,\n  heading,\n  btnName,\n  classNameBody,\n}) {\n  return (\n    <>\n      <Modal\n        show={modalVisble}\n        onHide={modalEventHandler}\n        backdrop={outerClick}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{heading}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={classNameBody}>{children}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={onSubmit}>\n            {btnName}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalWrapper;\n\nModalWrapper.defaultProps = {};\n","import React from \"react\";\nimport DateTime from \"../../../../components/DateTime\";\nimport ModalWrapper from \"../../../../components/ModalWrapper\";\nimport Select from \"../../../../components/Select\";\n\nconst CreateTaskModal = ({\n  modalVisble,\n  modalEventHandler,\n  completeJsonForDisplay,\n  onChangeDateTime,\n  onChangeMessage,\n  hadleOnChangePriority,\n  currentListOfUsers,\n  title,\n  btnName,\n}) => {\n  let prioritySet = [\n    { id: \"1\", name: \"Low\", value: \"low\" },\n    { id: \"2\", name: \"Medium\", value: \"medium\" },\n    { id: \"3\", name: \"High\", value: \"high\" },\n  ];\n  let prioritySetFind = completeJsonForDisplay.priority;\n  if (typeof completeJsonForDisplay.priority === \"string\") {\n    prioritySetFind = prioritySet?.find(\n      (obj) => obj.id === completeJsonForDisplay.priority\n    );\n  }\n  let detailCustomerName = completeJsonForDisplay.assigned_to;\n  if (typeof completeJsonForDisplay.assigned_to === \"string\") {\n    detailCustomerName = currentListOfUsers?.find(\n      (obj) => obj.id === completeJsonForDisplay.assigned_to\n    );\n  }\n\n  completeJsonForDisplay = {\n    ...completeJsonForDisplay,\n    priority: prioritySetFind,\n    assigned_to: detailCustomerName,\n  };\n  return (\n    <ModalWrapper\n      modalEventHandler={() => modalEventHandler(\"enable\")}\n      modalVisble={modalVisble}\n      outerClick={false}\n      onSubmit={() => modalEventHandler(\"submit\", completeJsonForDisplay)}\n      heading={title}\n      btnName={btnName}\n      classNameBody=\"modal-wrapper-body\"\n    >\n      <div className=\"form-group\">\n        <label>Select Due-date :</label>\n        <DateTime\n          className=\"form-control\"\n          value={completeJsonForDisplay?.due_date}\n          onChange={onChangeDateTime}\n          showTime={true}\n          placeHolder=\"Please select Date and Time\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Message :</label>\n        <input\n          className=\"form-control\"\n          onChange={onChangeMessage}\n          value={\n            completeJsonForDisplay?.message === undefined\n              ? \"\"\n              : completeJsonForDisplay?.message\n          }\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Priority :</label>\n        <Select\n          currentSelected={completeJsonForDisplay?.priority}\n          handleOnChange={(event) => hadleOnChangePriority(event, \"priority\")}\n          options={prioritySet}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Assigned :</label>\n        <Select\n          currentSelected={completeJsonForDisplay?.assigned_to}\n          handleOnChange={(event) => hadleOnChangePriority(event, \"assigned\")}\n          options={currentListOfUsers}\n        />\n      </div>\n    </ModalWrapper>\n  );\n};\n\nexport default CreateTaskModal;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.scss\";\nimport Select from \"../../components/Select\";\nimport * as Icon from \"react-bootstrap-icons\";\n\nimport {\n  getListOfUsers,\n  getTaskLists,\n  createTask,\n  taskRemoved,\n  updateTask,\n  searchingName,\n  settingSortCategory,\n} from \"./actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport DragDrop from \"../../components/DragDrop/index\";\nimport CreateTaskModal from \"./Components/CreateTaskModal\";\nimport { spinerStateUpdate } from \"../Login/actions\";\n\nconst Container = styled.div`\n  padding: 100px 0px 30px 0px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n\n  .btn-primary {\n    display: flex;\n    align-items: center;\n\n    .icon-add {\n      font-size: 20px;\n      margin-left: 5px;\n    }\n  }\n  // @media (max-width: 840px) {\n  //   padding: 0% 5%;\n  // }\n  // @media (max-width: 720px) {\n  //   display: block;\n  // }\n`;\n\nconst SearchSortWrapper = styled.div`\n  background: lightgray;\n  padding: 20px;\n  box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%) !important;\n  // justify-content: flex-end;\n  @media (max-width: 780px) {\n    padding: 5px;\n  }\n  .input-search-sort {\n    .sort-wrapper {\n      display: flex;\n      justify-content: flex-end;\n      @media (max-width: 780px) {\n        width: 100%;\n        display: flex;\n        justify-content: center;\n      }\n\n      .form-group {\n        display: flex;\n        align-items: center;\n        font-weight: 600;\n        width: 300px;\n        label {\n          width: 64px;\n          margin: 0px;\n          font-size: 1.2rem;\n          margin-right: 10px;\n          @media (max-width: 780px) {\n            font-size: 1rem;\n          }\n        }\n      }\n    }\n    .input-search {\n      width: 100%;\n      margin: 20px 0px;\n\n      input {\n        height: inherit;\n        border-radius: 54px;\n        padding: 0px 20px;\n        height: 56px;\n      }\n      .search-text {\n        font-size: 1.5rem;\n        font-weight: 700;\n        margin: 10px;\n        color: #be3946;\n        margin-top: 3px !important;\n        @media (max-width: 780px) {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [modalVisble, setModalVisibility] = useState(false);\n  const [completeJsonForDisplay, setCompleteJsonForDisplay] = useState({});\n  const [editModalVisible, setEditModalVisible] = useState(false);\n  const [searchValueDefined, setSearchValue] = useState(\"\");\n  const [sortSelect, setSortSelect] = useState({});\n\n  const currentListOfUsers = useSelector(\n    (state) => state?.homeData?.listOfAllUsers\n  );\n  const listOfAllTasks = useSelector(\n    (state) => state?.homeData?.listOfAllTasks\n  );\n  const sortBy = useSelector((state) => state?.homeData?.sortCategory);\n\n  useEffect(() => {\n    dispatch(spinerStateUpdate(true));\n    dispatch(getListOfUsers()).then((res) => {\n      dispatch(getTaskLists(res.data.users, sortBy)).then((res) => {\n        dispatch(spinerStateUpdate(false));\n      });\n    });\n  }, []);\n\n  const onChangeDateTime = (date) => {\n    setCompleteJsonForDisplay({\n      ...completeJsonForDisplay,\n      due_date: date,\n    });\n  };\n\n  const modalEventHandler = (type) => {\n    if (type === \"enable\") {\n      setCompleteJsonForDisplay({});\n      setModalVisibility(!modalVisble);\n    } else {\n      if (\n        completeJsonForDisplay?.due_date &&\n        completeJsonForDisplay?.assigned_to !== undefined &&\n        completeJsonForDisplay?.priority !== undefined &&\n        Object.keys(completeJsonForDisplay?.priority).length > 0 &&\n        Object.keys(completeJsonForDisplay?.assigned_to).length > 0 &&\n        completeJsonForDisplay?.message\n      ) {\n        const jsonCreation = {\n          message: completeJsonForDisplay?.message,\n          due_date: completeJsonForDisplay?.due_date,\n          priority: completeJsonForDisplay?.priority.id,\n          assigned_to: completeJsonForDisplay?.assigned_to.id,\n        };\n        dispatch(spinerStateUpdate(true));\n        dispatch(createTask(jsonCreation)).then((response) => {\n          if (response?.data?.status === \"success\") {\n            modalEventHandler(\"enable\");\n            setCompleteJsonForDisplay({});\n            dispatch(getTaskLists(currentListOfUsers, sortBy)).then((res) => {\n              dispatch(spinerStateUpdate(false));\n            });\n            toastMessage(\"success\", \"Task successfully added.\");\n          }\n        });\n      } else {\n        toastMessage(\"error\", \"Please fill all detail\");\n      }\n    }\n  };\n  const toastMessage = (toastType, message) => {\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n  const onChangeMessage = (event) => {\n    setCompleteJsonForDisplay({\n      ...completeJsonForDisplay,\n      message: event.target.value,\n    });\n  };\n\n  const hadleOnChangePriority = (selectedOption, type) => {\n    if (type === \"priority\") {\n      setCompleteJsonForDisplay({\n        ...completeJsonForDisplay,\n        priority: selectedOption,\n      });\n    } else if (type === \"assigned\") {\n      setCompleteJsonForDisplay({\n        ...completeJsonForDisplay,\n        assigned_to: selectedOption,\n      });\n    } else if (type === \"sort\") {\n      dispatch(settingSortCategory(listOfAllTasks, selectedOption.value));\n      setSortSelect(selectedOption);\n    }\n  };\n\n  const editModalSubmitHandler = (type, dataValue) => {\n    if (type === \"enable\") {\n      setCompleteJsonForDisplay({});\n      setEditModalVisible(!editModalVisible);\n    } else {\n      if (\n        dataValue.due_date &&\n        Object.keys(dataValue.priority).length > 0 &&\n        Object.keys(dataValue.assigned_to).length > 0 &&\n        dataValue.message\n      ) {\n        const jsonCreation = {\n          message: dataValue.message,\n          due_date: dataValue.due_date,\n          priority: dataValue.priority.id,\n          assigned_to: dataValue.assigned_to.id,\n          id: dataValue.id,\n        };\n        dispatch(spinerStateUpdate(true));\n\n        dispatch(updateTask(jsonCreation)).then((response) => {\n          if (response.data.status === \"success\") {\n            setEditModalVisible(!editModalVisible);\n            setCompleteJsonForDisplay({});\n            dispatch(getTaskLists(currentListOfUsers, sortBy)).then((res) =>\n              dispatch(spinerStateUpdate(false))\n            );\n            toastMessage(\"success\", \"Detail updated successfully.\");\n          }\n        });\n      }\n    }\n  };\n\n  const handlingRemoval = (removalValue) => {\n    dispatch(spinerStateUpdate(true));\n    dispatch(taskRemoved(removalValue.id)).then((response) => {\n      if (response.data.status === \"success\") {\n        dispatch(getTaskLists(currentListOfUsers, sortBy)).then((res) =>\n          dispatch(spinerStateUpdate(false))\n        );\n        toastMessage(\"success\", \"Removed successfully.\");\n      }\n    });\n  };\n\n  const handlingEdit = (value) => {\n    setCompleteJsonForDisplay(value);\n    setEditModalVisible(!editModalVisible);\n  };\n  const handleDragDrop = (json) => {\n    dispatch(spinerStateUpdate(true));\n    dispatch(\n      updateTask(\n        json,\n        listOfAllTasks?.dueDatedArray,\n        listOfAllTasks?.clonedData\n      )\n    ).then((response) => {\n      if (response.data.status === \"success\") {\n        dispatch(getTaskLists(currentListOfUsers, sortBy)).then((res) =>\n          dispatch(spinerStateUpdate(false))\n        );\n        toastMessage(\"success\", \"Priority updated successfully..\");\n      }\n    });\n  };\n\n  const onChangeSearch = (value) => {\n    dispatch(searchingName(listOfAllTasks?.clonedData, value.target.value));\n    setSearchValue(value.target.value);\n    // debugger;\n  };\n\n  const sortNumber = [\n    { id: \"1\", name: \"Date\", value: \"due_date\" },\n    { id: \"2\", name: \"Name\", value: \"assigned_name\" },\n  ];\n\n  const isDisabledSordSearch =\n    Object.keys(listOfAllTasks).length > 0 ? false : true;\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <Container>\n          <ButtonWrapper>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => modalEventHandler(\"enable\")}\n            >\n              Create Task\n              <div className=\"icon-add\">\n                <Icon.Plus />\n              </div>{\" \"}\n            </button>\n          </ButtonWrapper>\n          <SearchSortWrapper>\n            <div className=\"input-search-sort\">\n              <div className=\"input-search\">\n                <input\n                  type=\"text\"\n                  value={searchValueDefined}\n                  onChange={onChangeSearch}\n                  placeholder=\"Search\"\n                  className=\"form-control\"\n                  disabled={isDisabledSordSearch}\n                />\n                <div className=\"search-text\">Devza Search</div>\n              </div>\n              <div className=\"sort-wrapper\">\n                <div className=\"form-group\">\n                  <label>Sort :</label>\n                  <Select\n                    currentSelected={sortSelect}\n                    handleOnChange={(event) =>\n                      hadleOnChangePriority(event, \"sort\")\n                    }\n                    options={sortNumber}\n                    isDisabled={isDisabledSordSearch}\n                  />\n                </div>\n              </div>\n            </div>\n            {Object.keys(listOfAllTasks).length > 0 ? (\n              <div className=\"wrapper-dragdrop\">\n                <DragDrop\n                  handlingRemoval={handlingRemoval}\n                  listOfAllTasks={listOfAllTasks}\n                  handlingEdit={handlingEdit}\n                  handleDragDrop={handleDragDrop}\n                />\n              </div>\n            ) : (\n              <div>No data found</div>\n            )}\n          </SearchSortWrapper>\n          {modalVisble && (\n            <CreateTaskModal\n              modalVisble={modalVisble}\n              modalEventHandler={modalEventHandler}\n              completeJsonForDisplay={completeJsonForDisplay}\n              onChangeDateTime={onChangeDateTime}\n              onChangeMessage={onChangeMessage}\n              hadleOnChangePriority={hadleOnChangePriority}\n              currentListOfUsers={currentListOfUsers}\n              title={\"Create Task\"}\n              btnName=\"Create\"\n              // currentType={\"\"}\n            />\n          )}\n          {editModalVisible && (\n            <CreateTaskModal\n              modalVisble={editModalVisible}\n              modalEventHandler={editModalSubmitHandler}\n              completeJsonForDisplay={completeJsonForDisplay}\n              onChangeDateTime={onChangeDateTime}\n              onChangeMessage={onChangeMessage}\n              hadleOnChangePriority={hadleOnChangePriority}\n              currentListOfUsers={currentListOfUsers}\n              title={\"Edit Task\"}\n              btnName=\"Edit\"\n\n              // currentType={\"\"}\n            />\n          )}\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n  // }\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./style.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function NavBar(props) {\n  const { heading, logout, buttonName, buttonClass } = props;\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-light\">\n        <div className=\"d-flex flex-row justify-content-between\">\n          <div>\n            <h4>\n              <b>{heading}</b>\n            </h4>\n          </div>\n          <div>\n            <button className={buttonClass} onClick={() => logout()}>\n              {buttonName}{\" \"}\n            </button>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavBar.defaultProps = {\n  heading: \"Default\",\n  logout: () => {},\n  buttonName: \"Logout\",\n  buttonClass: \"btn-primary\",\n};\n\nNavBar.propTypes = {\n  heading: PropTypes.string,\n  logout: PropTypes.func,\n  buttonName: PropTypes.string,\n  buttonClass: PropTypes.string,\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"../modules/Home\";\nimport NavBar from \"../components/NavBar\";\n\nimport { useDispatch } from \"react-redux\";\nimport { authenticateUserAction } from \"../modules/Login/actions\";\n\nexport default function AuthRoute(props) {\n  const { isValidUser } = props;\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {isValidUser ? (\n        <>\n          <NavBar\n            logout={() => dispatch(authenticateUserAction(false))}\n            heading={\"Devza\"}\n            buttonName={\"Logout\"}\n            buttonClass=\"btn btn-primary\"\n          />\n          <Route exact path=\"/home\" component={Home} />\n        </>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\n\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: \"\",\n        password: \"\",\n      },\n      errors: {},\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      email: \"required|email\",\n      password: \"required\",\n    });\n    this.form.onformsubmit = (fields) => {\n      if (\n        localStorage.getItem(\"email\") === null &&\n        localStorage.getItem(\"password\") === null\n      )\n        return this.toastVisible(\"not registered please registered first\");\n      else if (localStorage.getItem(\"email\") !== fields.email)\n        return this.toastVisible(\"email not matched\");\n      else if (localStorage.getItem(\"password\") !== fields.password)\n        return this.toastVisible(\"password not matched\");\n      else {\n        this.props.authenticateUserAction(true);\n        this.props.history.push(\"/home\");\n      }\n    };\n  }\n\n  toastVisible = (message) => {\n    toast.dismiss();\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.form.handleSubmit}>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.email ? this.state.errors.email : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.password ? this.state.errors.password : \"\"}\n            </label>\n          </p>\n\n          <p>\n            <button type=\"submit\" className=\"btn btn-secondary\">\n              Submit\n            </button>\n          </p>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ isValidUser }) => {\n  return { isValidUser };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ authenticateUserAction }, dispatch),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      },\n      errors: {},\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      name: \"required\",\n      email: \"required|email\",\n      password: \"required\",\n      confirmPassword: \"required\",\n    });\n    this.form.onformsubmit = (fields) => {\n      if (fields.password !== fields.confirmPassword) {\n        console.log(\"password not matched\");\n      } else {\n        localStorage.setItem(\"email\", fields.email);\n        localStorage.setItem(\"password\", fields.password);\n        this.props.history.push(\"/\");\n      }\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.form.handleSubmit}>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Name\n              <input\n                type=\"name\"\n                name=\"name\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.name}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.name ? this.state.errors.name : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.email ? this.state.errors.email : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.password ? this.state.errors.password : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Confirm Password\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.confirmPassword}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.confirmPassword\n                ? this.state.errors.confirmPassword\n                : \"\"}\n            </label>\n          </p>\n\n          <p>\n            <button type=\"submit\" className=\"btn btn-secondary\">\n              Submit\n            </button>\n          </p>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n","import React, { Component } from 'react';\nimport './style.scss';\nimport '../../assets/styles/variable.scss';\nimport Login from '../../modules/Login/index';\nimport SignUp from '../../modules/SignUp/index';\n\n\nexport default class Card extends Component {\n\n    render() {\n        const { handleClick, signup, login } = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"custom-card\">\n                    {login ? (\n                        <div>\n                            <Login></Login>\n                            <div className=\"mt-2 d-flex\">\n                                <span>click here to</span>\n                                <div role=\"link\" onClick={() => handleClick(\"signup\")} className=\"card-link ml-1\"> Sign Up?</div>\n                            </div>\n                        </div>\n                    ) : null}\n                    {signup ? (\n                        <div>\n                            <SignUp></SignUp>\n                            <div className=\"mt-2 d-flex\">\n                                <span>click here to</span>\n                                <div role=\"link\" onClick={() => handleClick(\"login\")} href=\"0\" className=\"card-link ml-1\"> Login</div>\n                            </div>\n                        </div>\n                    ) : null}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Card from '../../components/Card';  \nimport './style.scss';\n\n\n\n\nexport default class LandingPage extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            signUp:false,\n            login:true\n        }\n    }\n   \n    \n    onClickHandle=(value)=>{\n    if(value === \"login\") return this.setState({login:true,signUp:false})\n    else return this.setState({login:false,signUp:true})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='main-container'>\n                    <div className=\"sub-container\">\n                        <div className=\"login-page\"></div>\n                        <Card signup={this.state.signUp} login={this.state.login} handleClick={this.onClickHandle}></Card>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst DarkBackground = styled.div`\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 999999; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n\n  ${(props) =>\n    props.disappear &&\n    css`\n      display: block; /* show */\n    `}\n`;\n\nconst SpinnerComponent = () => {\n  const spinnerState = useSelector(\n    (state) => state?.isValidUser?.spinnerVisibility\n  );\n  return (\n    <DarkBackground disappear={spinnerState}>\n      <LoadingOverlay\n        active={spinnerState}\n        spinner\n        text=\"Loading your content...\"\n        style={{ width: \"100%\", height: \"100%\" }}\n        className=\"spinner-class\"\n      />\n    </DarkBackground>\n  );\n};\nexport default SpinnerComponent;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AuthRoute from \"./router/AuthRoute\";\nimport PropTypes from \"prop-types\";\nimport LandingPage from \"./modules/LandingPage\";\nimport SpinnerComponent from \"./components/SpinnerComponent\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <SpinnerComponent />\n        <Switch>\n          <Route exact={true} path=\"/login\" component={LandingPage} />\n          <AuthRoute isValidUser={props.isValidUser?.getCurrentStatus} />\n          <Route\n            path=\"/\"\n            render={() => <Redirect from=\"/\" to=\"/login\" />}\n          ></Route>\n          <Redirect from=\"*\" to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ isValidUser }) => {\n  return { isValidUser };\n};\nexport default connect(mapStateToProps, null)(App);\n\nApp.defaultProps = {\n  isValidUser: false,\n};\nApp.propTypes = {\n  isValidUser: PropTypes.bool,\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_LIST_USERS,\n  GET_LIST_TASKS,\n  MODAL_POP_UP,\n  SORT_CATEGORY,\n} from \"../modules/Home/actions\";\n\nconst initialState = {\n  listOfAllUsers: [],\n  listOfAllTasks: [],\n  sortCategory: \"\",\n  modalPopUp: false,\n};\n\nexport const homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LIST_USERS:\n      return { ...state, listOfAllUsers: action.payload };\n    case GET_LIST_TASKS:\n      return { ...state, listOfAllTasks: action.payload };\n    case SORT_CATEGORY:\n      return { ...state, sortCategory: action.payload };\n    case MODAL_POP_UP:\n      return {\n        ...state,\n        modalPopUp: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { IS_VALID_USER, SPINNER } from \"../modules/Login/actions\";\n\nconst getCurrentStatus = JSON.parse(localStorage.getItem(\"isValid\"));\n\nconst initialState = {\n  getCurrentStatus,\n  spinnerVisibility: false,\n};\n\nexport const loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case IS_VALID_USER:\n      return { ...state, getCurrentStatus: action.payload };\n    case SPINNER:\n      return { ...state, spinnerVisibility: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { homeReducer } from \"./homeReducer\";\nimport { loginReducer } from \"./loginReducer\";\n\nconst rootReducer = combineReducers({\n  homeData:homeReducer,\n  isValidUser:loginReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport reducer from \"./redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport ReduxPromise from \"redux-promise\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk, ReduxPromise),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true, traceLimit: 25 })\n      : (f) => f\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastContainer />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}